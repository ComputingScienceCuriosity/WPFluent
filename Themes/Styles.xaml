<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					 xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
					 xmlns:views="clr-namespace:WPFluent.Views">
    
    <Style x:Key="MainWindowStyle" TargetType="{x:Type views:MainWindow}">
        <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenWidth}}"/>
        <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenHeight}}"/>
        <Setter Property="BorderBrush" Value="Beige"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome ResizeBorderThickness="2" CaptionHeight="30" CornerRadius="0" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="WindowContainer">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    
    <Style TargetType="Border" x:Key="BorderShadowWindowContainer">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="RenderTransformOrigin" Value="0,0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StackPanel" x:Key="WindowHeaderStackPanelStyle">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="DockPanel.Dock" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="HeaderButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" BorderBrush="LightGreen" CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackgroundButtonHeader" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="HeaderBouton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="38" />
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource HeaderButtonFocusVisual}" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BackgroundButtonHeader}" x:Name="MainBackground">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" From="0.0" To="0.9"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="BackgroundAnimation" Opacity="0" Background="{TemplateBinding Background}"/>
                            <Rectangle Height="18" Fill="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter Visibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="BackgroundAnimation" Value="{DynamicResource BrushCouleurFondDesactive}"/>
                            <Setter Property="Opacity" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1.0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource HeaderBouton}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="30" />
    </Style>
    <Style x:Key="WindowButtonCloseImage" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource BrushCloseWhite}"/>
        <Setter Property="Background" Value="#EEE74856"/>
    </Style>
    <Style x:Key="WindowButtonMinimizeImage" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource BrushMinimizeWhite}"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
    </Style>
    <Style x:Key="WindowButtonMaximizeImage" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource BrushMaximizeWhite}"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Normal">
                <Setter Property="BorderBrush" Value="{DynamicResource BrushMaximizeWhite}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="BorderBrush" Value="{DynamicResource BrushResizeWindowWhite}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>